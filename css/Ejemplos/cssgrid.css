 /* CSS Grid layout contiene funciones de diseño dirigidas a los desarrolladores de aplicaciones web. El CSS grid se puede utilizar para lograr muchos diseños diferentes. También se destaca por permitir dividir una página en áreas o regiones principales, por definir la relación en términos de tamaño, posición y capas entre partes de un control construido a partir de primitivas HTML.

Al igual que las tablas, el grid layout permite a un autor alinear elementos en columnas y filas. Sin embargo, con CSS grid son posibles muchos más diseños y de forma más sencilla que con las tablas. Por ejemplo, los elementos secundarios de un contenedor de cuadrícula podrían posicionarse para que se solapen y se superpongan, de forma similar a los elementos posicionados en CSS.*/

 .wrapper {
   display: grid;
   grid-template-columns: repeat(3, 1fr);
   grid-gap: 10px;
   grid-auto-rows: minmax(100px, auto);
 }

 .one {
   grid-column: 1 / 3;
   grid-row: 1;
 }

 .two {
   grid-column: 2 / 4;
   grid-row: 1 / 3;
 }

 .three {
   grid-column: 1;
   grid-row: 2 / 5;
 }

 .four {
   grid-column: 3;
   grid-row: 3;
 }

 .five {
   grid-column: 2;
   grid-row: 4;
 }

 .six {
   grid-column: 3;
   grid-row: 4;
 }

 .simplificado {
   display: grid;
   /* grid-template-columns: 300px 300px;
    grid-template-rows: 200px 800px; */

   grid: 200px 800px / 300px 300px;

   grid-template-columns: 33.3% 33.3% 33.3%;
   /* version corta para dividir en fracciones */
   grid-template-columns: 1fr 1fr 1fr;
   /* version mas simplificada */
   grid-template-columns: repeat(3, 1fr);
 }

 /* UTILIZA FLEXBOX */
 /* Para la alineacion o distribucion de los elementos que estaran dentro de contenedores */

 /* UTILIZA CSS GRID */
 /* Para definir el layout de tu sitio web, como pueden ser las columnas o contenedores de elementos */